((("clj-refactor-mode" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("cider-mode" .
   [1 0 0 0 0 0 0 0 0 0])
  ("rainbow-delimiters-mode" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0])
  ("lambda" .
   [1 0 0 0 0 0])
  ("clojure-mode-hook" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("add-hook" .
   [1 0 0 0 0 0 0 0])
  ("paredit" .
   [2 0 0 0 0 0 0])
  ("use-package" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("i" .
   [1])
  (":config" .
   [1 0 0 0 0 0 0])
  ("cider-eval-sexp-fu" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("current-buffer" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("plist-put" .
   [1 0 0 0 0 0 0 0 0])
  ("let" .
   [1 0 0])
  ("dasherize" .
   [0 0 0 0 0 0 1 0 1])
  ("to-s" .
   [1 0 0 0])
  ("str/replace" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("four-oh-four" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("wrap-four-oh-four" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("res" .
   [4 0 0])
  ("handler" .
   [1 0 0 0 0 0 0])
  ("req" .
   [3 0 0])
  ("def" .
   [1 0 0])
  ("trace-ring" .
   [1 0 0 0 0 0 0 0 0 0])
  ("trace" .
   [1 0 0 0 0])
  (":iframe" .
   [1 0 0 0 0 0 0])
  (":chargebee-domain" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("js*" .
   [1 0 0])
  ("js/debugger" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("height" .
   [2 0 0 0 0 0])
  (".." .
   [1 0])
  ("set!" .
   [1 0 0 0])
  ("body" .
   [1 0 0 0])
  ("js/document.getElementById" .
   [0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("el" .
   [4 0])
  ("id" .
   [2 0])
  ("members" .
   [1 0 0 0 0 0 0])
  (":body" .
   [1 0 0 0 0])
  (":status" .
   [2 0 0 0 0 0 0])
  ("dotimes" .
   [1 0 0 0 0 0 0])
  ("cider" .
   [1 0 0 0 0])
  ("plexus/cider-eval-and-insert" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("&optional" .
   [1 0 0 0 0 0 0 0 0])
  ("prefix" .
   [2 0 0 0 0 0])
  ("if" .
   [2 0])
  ("progn" .
   [0 0 0 0 1])
  ("pos" .
   [3 0 0])
  ("point" .
   [1 0 0 0 0])
  ("cider-eval-last-sexp" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("save-excursion" .
   [0 0 0 0 0 0 0 2 0 0 0 0 0 0])
  ("goto-char" .
   [0 0 0 0 0 0 0 0 1])
  ("insert" .
   [2 0 0 0 0 0])
  ("message" .
   [1 0 0 0 0 0 0])
  ("at" .
   [1 0])
  ("we" .
   [3 0])
  ("will" .
   [6 0 0 0])
  ("two" .
   [2 0 0])
  ("have" .
   [4 0 0 0])
  ("been" .
   [1 0 0 0])
  ("handled" .
   [1 0 0 0 0 0 0])
  ("by" .
   [1 0])
  ("work" .
   [2 0 0 0])
  ("want" .
   [3 0 0 0])
  ("to" .
   [12 0])
  ("start" .
   [1 0 0 0 0])
  ("Organizing" .
   [0 0 0 0 2 1 0 0 0 0])
  ("things" .
   [1 0 0 0 0 0])
  ("and" .
   [5 0 0])
  ("the" .
   [5 0 0])
  ("We" .
   [3 0])
  ("that" .
   [2 0 0 0])
  ("has" .
   [1 0 0])
  ("done" .
   [2 0 0 0])
  ("an" .
   [1 0])
  ("first" .
   [3 0 0 0 0])
  ("are" .
   [2 0 0])
  ("who" .
   [2 0 0])
  ("part" .
   [1 0 0 0])
  ("in" .
   [3 0])
  ("this" .
   [1 0 0 0])
  ("workshop" .
   [3 0 0 0 0 0 0 0])
  ("our" .
   [1 0 0])
  ("coming" .
   [1 0 0 0 0 0])
  ("In" .
   [1 0])
  ("hope" .
   [1 0 0 0])
  ("c" .
   [1])
  ("invite" .
   [1 0 0 0 0 0])
  ("closing" .
   [2 0 0 0 0 0 0])
  ("can" .
   [1 0 0])
  ("get" .
   [1 0 0])
  ("This" .
   [2 0 0 0])
  ("play" .
   [1 0 0 0])
  ("active" .
   [1 0 0 0 0 0])
  ("ClojureBridge" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("You" .
   [2 0 0])
  ("don" .
   [1 0 0])
  ("There" .
   [2 0 0 0 0])
  ("about" .
   [1 0 0 0 0])
  ("what" .
   [3 0 0 0])
  ("into" .
   [1 0 0 0])
  ("way" .
   [1 0 0])
  ("of" .
   [1 0])
  ("d" .
   [2])
  ("won" .
   [1 0 0])
  ("anything" .
   [1 0 0 0 0 0 0 0])
  ("yet" .
   [1 0 0])
  ("during" .
   [1 0 0 0 0 0])
  ("you" .
   [4 0 0])
  ("come" .
   [1 0 0 0])
  ("then" .
   [1 0 0 0])
  ("afterwards." .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("role" .
   [1 0 0 0])
  ("see" .
   [1 0 0])
  ("yourself." .
   [1 0 0 0 0 0 0 0 0])
  ("decide" .
   [1 0 0 0 0 0])
  ("on" .
   [1 0])
  ("key" .
   [1 0 0])
  ("applications" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("date" .
   [2 0 0 0])
  ("coaches" .
   [1 0 0 0 0 0 0])
  ("core" .
   [1 0 0 0])
  ("meetings" .
   [0 0 0 0 0 0 0 1])
  ("be" .
   [1 0])
  ("both" .
   [1 0 0 0])
  ("so" .
   [1 0])
  ("it" .
   [1 0])
  ("up" .
   [1 0])
  ("time" .
   [1 0 0 0])
  ("nrepl--eval-request" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("foo" .
   [1 0 0])
  ("re" .
   [1 0])
  (":ensure" .
   [2 0 0 0 0 0 0])))
